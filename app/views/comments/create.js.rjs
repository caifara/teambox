thread_id = "#{@target.class.to_s}_#{@target.id}"

if @saved
  # First, reset the form if successful
  if @new_thread
    page << %[form = $$('.new_comment').first()]
    page.remove_form_errors(@comment, "new_comment")
  else
    page << %[form = $$('#thread_#{thread_id}_reply .new_comment').first()]
    page.remove_form_errors(@comment, "thread_#{@thread_id}_reply")
  end
  page << %[form.reset()]
  page << %[form.down('textarea[name*="[body]"]').setStyle({ height: '' })]
else
  # Or show errors if it failed
  if @new_thread
    page.show_form_errors(@comment, "new_comment")
  else
    page.show_form_errors(@comment, "thread_#{@thread_id}_reply")
  end
end

# And if that worked, let's display the results
if @saved
  if @new_thread
    # Starts a new thread
    page.insert_html :top, :activities, render_thread(@target)
  else 
    # Posts to an existing thread
    page.insert_html :bottom, "thread_#{thread_id}_comments", :partial => 'comments/comment', :locals => { :comment => @comment, :threaded => true }
    # Update fields account to status if it's a Task
    if @target.is_a?(Task)
      if @target.closed?
        page.replace_html "thread_#{thread_id}_reply", "" # 
      else
        # WE NEED TO BUILD @new_comment SO THIS WORKS!
        page.replace_html "thread_#{thread_id}_reply", new_comment_form(@current_project, @new_comment, :target => @task, :thread => true)
      end
    end
  end
end

# If that worked, highlight it for some eye candy
if @saved
  if @new_thread
    page["thread_#{thread_id}"].visual_effect :highlight, :duration => 3
  else
    page["comment_#{@comment.id}"].visual_effect :highlight, :duration => 2
  end
end